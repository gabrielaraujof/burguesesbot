name: Continuous Deployment

on:
  push:
    branches: [main]

jobs:
  ci:
    name: CI
    uses: ./.github/workflows/default.yml
    secrets: inherit
    permissions:
      contents: read
      packages: write
      pull-requests: write
      statuses: write 
      deployments: write
      checks: write

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies (including dev)
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 1

  staging:
    name: Staging Deploy
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: stg
    env:
      SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      WEBHOOK_SECRET_PATH: ${{ secrets.WEBHOOK_SECRET_PATH }}
      FREE_GAMES_PROMOTIONS_URL: ${{ vars.FREE_GAMES_PROMOTIONS_URL }}
      PRODUCT_STORE_URL: ${{ vars.PRODUCT_STORE_URL }}
      OPEN_TRIVIA_DB_URL: ${{ vars.OPEN_TRIVIA_DB_URL }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
      DISCORD_GUILD_ID: ${{ vars.DISCORD_GUILD_ID }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --production

      - name: Install Serverless
        run: npm i -g serverless
      
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist

      - name: Setup aws cli
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy serverless to AWS Lambda
        run: sls deploy --stage development


  production:
    name: Production Deploy
    runs-on: ubuntu-latest
    needs: staging
    environment:
      name: prd
    env:
      SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      WEBHOOK_SECRET_PATH: ${{ secrets.WEBHOOK_SECRET_PATH }}
      FREE_GAMES_PROMOTIONS_URL: ${{ vars.FREE_GAMES_PROMOTIONS_URL }}
      PRODUCT_STORE_URL: ${{ vars.PRODUCT_STORE_URL }}
      OPEN_TRIVIA_DB_URL: ${{ vars.OPEN_TRIVIA_DB_URL }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
      DISCORD_GUILD_ID: ${{ vars.DISCORD_GUILD_ID }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --production

      - name: Install Serverless
        run: npm i -g serverless
      
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist

      - name: Setup aws cli
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy serverless to AWS Lambda
        run: sls deploy --stage production
